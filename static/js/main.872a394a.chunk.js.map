{"version":3,"sources":["utils/index.js","features/rockets/constants.js","features/rockets/rocketsAPI.js","features/rockets/rocketsSlice.js","features/rockets/styles.js","features/rockets/RocketCard.js","features/rockets/Rockets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["loadingOrErrorStatus","status","IDLE","fetchRockets","a","fetch","response","json","data","console","warn","initialState","allRockets","getRockets","createAsyncThunk","rocketsSlice","createSlice","name","reducers","toggleFavorite","state","action","rocketIndex","findIndex","rocket","id","payload","isFavorite","extraReducers","builder","addCase","pending","fulfilled","log","rejected","error","actions","selectStatus","rockets","selectRockets","RocketCardWrapper","styled","div","figure","TextDrawer","figcaption","Title","h1","Hearth","h2","props","Subtitle","h3","Text","p","Image","img","BackgroundSparkles","FlyingTesla","RocketCard","description","flickr_images","active","cost_per_launch","dispatch","useDispatch","useSelector","find","selectIsFavorite","trimmedCostPerLaunch","toFixed","replace","src","alt","onClick","Rockets","useEffect","width","map","memo","App","store","configureStore","reducer","rocketsReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.872a394a.chunk.js","sourcesContent":["export const loadingOrErrorStatus = (status) => {\n  if (status === 'loading') {\n    return <h2>Loading...</h2>;\n  }\n  if (status === 'error') {\n    return <h2>Error fetching rockets, try again soon...</h2>;\n  }\n};\n","export const IDLE = 'idle';\nexport const LOADING = 'loading';\nexport const ERROR = 'error';\n","export const fetchRockets = async () => {\n  try {\n    const response = await fetch('https://api.spacexdata.com/v4/rockets');\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return console.warn(error);\n  }\n};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { ERROR, IDLE, LOADING } from './constants';\nimport { fetchRockets } from './rocketsAPI';\n\nconst initialState = {\n  status: IDLE,\n  allRockets: [],\n};\n\nexport const getRockets = createAsyncThunk('rockets/fetchRockets', async () => {\n  const response = await fetchRockets();\n  return response;\n});\n\nexport const rocketsSlice = createSlice({\n  name: 'rockets',\n  initialState,\n\n  reducers: {\n    toggleFavorite: (state, action) => {\n      const rocketIndex = state.allRockets.findIndex(\n        (rocket) => rocket.id === action.payload\n      );\n\n      if (!state.allRockets[rocketIndex]?.isFavorite) {\n        state.allRockets[rocketIndex] = {\n          ...state.allRockets[rocketIndex],\n          isFavorite: true,\n        };\n      } else {\n        state.allRockets[rocketIndex] = {\n          ...state.allRockets[rocketIndex],\n          isFavorite: !state.allRockets[rocketIndex]?.isFavorite,\n        };\n      }\n    },\n  },\n\n  extraReducers: (builder) => {\n    builder\n      .addCase(getRockets.pending, (state) => {\n        state.status = LOADING;\n      })\n      .addCase(getRockets.fulfilled, (state, action) => {\n        state.status = IDLE;\n        state.allRockets = action.payload;\n        console.log('state.allRocketsEXTRA', state.allRockets);\n      })\n      .addCase(getRockets.rejected, (state) => {\n        state.status = ERROR;\n        console.error('Error when fetching rockets!');\n      });\n  },\n});\n\n// Actions\nexport const { toggleFavorite } = rocketsSlice.actions;\n\n// Selectors\nexport const selectStatus = (state) => state.rockets.status;\nexport const selectRockets = (state) => state.rockets.allRockets || [];\nexport const selectIsFavorite = (state, id) =>\n  state.rockets?.allRockets.find((rocket) => rocket.id === id)?.isFavorite;\n\nexport default rocketsSlice.reducer;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  font-family: 'Roboto', sans-serif;\n  font-size: 16px;\n  font-smooth: auto;\n  font-weight: 300;\n  line-height: 1.5;\n  color: #444;\n`;\n\n/** Styled rocket card */\nexport const RocketCardWrapper = styled.figure`\n  box-sizing: border-box;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 675px;\n  min-width: 300px;\n  height: 750px;\n  border-radius: 10px;\n  margin: 5rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n  overflow: hidden;\n  &:hover {\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n    img {\n      transform: scale(1.25);\n    }\n    figcaption {\n      bottom: 0;\n    }\n  }\n\n  @media only screen and (max-width: 500px) {\n    width: 375px;\n    min-width: 300px;\n    height: 550px;\n  }\n`;\n\nexport const TextDrawer = styled.figcaption`\n  position: absolute;\n  box-sizing: border-box;\n  bottom: -25%;\n  left: 0;\n  width: 100%;\n  height: 34%;\n  margin: 0;\n  padding: 30px;\n  background-color: rgba(0, 0, 0, 0.85);\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.4);\n  color: white;\n  line-height: 1;\n  transition: 1.25s;\n\n  @media only screen and (max-width: 500px) {\n    bottom: -49%;\n    height: 60%;\n    padding: 20px;\n  }\n`;\n\nexport const Title = styled.h1`\n  position: absolute;\n  top: 50px;\n  left: 20px;\n  margin: 0;\n  padding: 0;\n  color: white;\n  font-size: 60px;\n  font-weight: 300;\n  line-height: 1;\n`;\n\nexport const Hearth = styled.h2`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  margin: 0;\n  padding: 0;\n  color: ${(props) => (props.isFavorite ? 'red' : 'white')};\n  font-size: 30px;\n  font-weight: 300;\n  line-height: 1;\n  cursor: pointer;\n`;\n\nexport const Subtitle = styled.h3`\n  margin: 0 0 20px;\n  padding: 0;\n`;\n\nexport const Text = styled.p`\n  font-size: 14px;\n  line-height: 1.75;\n`;\n\nexport const Image = styled.img`\n  height: 100%;\n\n  transition: 1.25s;\n`;\n\nexport const BackgroundSparkles = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  flex-wrap: wrap;\n  animation: move 400s linear infinite;\n  background: black\n    url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/1231630/stars.png) repeat;\n  z-index: 0;\n\n  @keyframes move {\n    from {\n      background-position: 0 0;\n    }\n    to {\n      background-position: 10000px 0;\n    }\n  }\n`;\n\nexport const FlyingTesla = styled.div`\n  pointer-events: none;\n  animation: fly 50s linear infinite;\n  pointer-events: none !important;\n  top: 0;\n  left: 0;\n  transform: translateX(-120%) translateY(-120%) rotateZ(0);\n  position: fixed;\n  animation-delay: 1s;\n\n  @keyframes fly {\n    98.001%,\n    0% {\n      display: block;\n      transform: translateX(-200%) translateY(100vh) rotateZ(0deg);\n    }\n\n    15% {\n      transform: translateX(100vw) translateY(-100%) rotateZ(180deg);\n    }\n\n    15.001%,\n    18% {\n      transform: translateX(100vw) translateY(-30%) rotateZ(0deg);\n    }\n\n    40% {\n      transform: translateX(-200%) translateY(3vh) rotateZ(-180deg);\n    }\n\n    40.001%,\n    43% {\n      transform: translateX(-200%) translateY(-100%) rotateZ(-180deg);\n    }\n\n    65% {\n      transform: translateX(100vw) translateY(50vh) rotateZ(0deg);\n    }\n\n    65.001%,\n    68% {\n      transform: translateX(20vw) translateY(-200%) rotateZ(180deg);\n    }\n\n    95% {\n      transform: translateX(10vw) translateY(100vh) rotateZ(0deg);\n    }\n  }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsFavorite, toggleFavorite } from './rocketsSlice';\nimport {\n  TextDrawer,\n  Image,\n  RocketCardWrapper,\n  Text,\n  Title,\n  Subtitle,\n  Hearth,\n} from './styles';\n\nconst RocketCard = ({ rocket }) => {\n  const {\n    name,\n    description,\n    flickr_images,\n    active,\n    cost_per_launch,\n    id,\n  } = rocket;\n  const dispatch = useDispatch();\n  const isFavorite = useSelector((state) => selectIsFavorite(state, id));\n\n  const trimmedCostPerLaunch = cost_per_launch\n    .toFixed(2)\n    .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n\n  const favoriteRocketToggle = () => {\n    dispatch(toggleFavorite(id));\n  };\n\n  return (\n    <>\n      <RocketCardWrapper>\n        <Title>{name}</Title>\n        <Image src={flickr_images} alt=\"\" />\n        <TextDrawer>\n          <Subtitle>More Information</Subtitle>\n          <Hearth isFavorite={isFavorite} onClick={favoriteRocketToggle}>\n            {'♥'}\n          </Hearth>\n          <Text>{description}</Text>\n          <Text>{`Cost per launch: ${trimmedCostPerLaunch}`}</Text>\n          <Text>\n            {active\n              ? 'This rocket is active today'\n              : 'This rocket is not in service'}\n          </Text>\n        </TextDrawer>\n      </RocketCardWrapper>\n    </>\n  );\n};\n\nexport default RocketCard;\n","import React, { memo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadingOrErrorStatus } from '../../utils';\nimport { IDLE } from './constants';\nimport RocketCard from './RocketCard';\nimport { getRockets, selectRockets, selectStatus } from './rocketsSlice';\nimport { BackgroundSparkles, FlyingTesla } from './styles';\n\nconst Rockets = () => {\n  const dispatch = useDispatch();\n\n  const status = useSelector(selectStatus);\n  const rockets = useSelector(selectRockets);\n\n  useEffect(() => {\n    dispatch(getRockets());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {status !== IDLE ? (\n        loadingOrErrorStatus(status)\n      ) : (\n        <BackgroundSparkles>\n          <FlyingTesla>\n            <img\n              src=\"https://cdn.motor1.com/images/mgl/48vxY/s1/tesla-roadster-in-space.webp\"\n              width=\"200px\"\n              alt=\"\"\n            />\n          </FlyingTesla>\n          {rockets?.map((rocket) => (\n            <RocketCard key={rocket.id} rocket={rocket} />\n          ))}\n        </BackgroundSparkles>\n      )}\n    </>\n  );\n};\n\nexport default memo(Rockets);\n","import React from 'react';\nimport Rockets from './features/rockets/Rockets';\n\nfunction App() {\n  return <Rockets />;\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport rocketsReducer from '../features/rockets/rocketsSlice';\n\nexport const store = configureStore({\n  reducer: {\n    rockets: rocketsReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}